name: Terraform Plan Template

on:
  workflow_call:   
    inputs:
      path:
        description: 'Path to Terraform configuration'
        required: true
        type: string
        default: 'modules-call'
      terraform_destroy:
        description: 'Run terraform plan -destroy'
        required: true
        type: string
        default: 'false'

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      contents: read
      id-token: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate Module Version
        run: |
          chmod +x ./scripts/validate_module_version.sh
          ./scripts/validate_module_version.sh ${{ inputs.path }}

      - name: Install latest Terraform
        run: |
          set -euo pipefail

          echo "üîç Installing jq..."
          sudo apt-get update && sudo apt-get install -y jq

          echo "‚¨áÔ∏è Fetching latest Terraform version..."
          TERRAFORM_VERSION=$(curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform | jq -r .current_version)

          echo "üì¶ Installing Terraform $TERRAFORM_VERSION..."
          curl -s -L -o terraform.zip "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
          unzip -o terraform.zip
          sudo mv terraform /usr/local/bin/terraform
          rm -f terraform.zip

          terraform version

      # - name: Azure Login using OIDC
      #   uses: azure/login@v1
      #   with:
      #     client-id: ${{ secrets.AZURE_CLIENT_ID }}
      #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Azure CLI Login
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az login 

      - name: Terraform Init and Plan
        working-directory: ${{ inputs.path }}
        run: |
          terraform init

          if [[ "${{ inputs.terraform_destroy }}" == "true" ]]; then
            terraform plan -destroy -out=tfplandestroy
          else
            terraform plan -out=tfplan
          fi

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.terraform_destroy == 'true' && 'tfplandestroy' || 'tfplan' }}
          path: ${{ inputs.path }}
